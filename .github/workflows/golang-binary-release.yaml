name: The prebuilt binaries release

on:
  workflow_call:
    inputs:
      working-directory:
        required: false
        type: string
        default: '.'
    secrets:
      gh-token:
        required: true

jobs:
  branch-debug:
    name: "Branch Debug"
    runs-on: ubuntu-24.04
    steps:
      - name: Debug refs
        run: |
          echo "ref = ${{ github.ref }}"
          echo "base_ref = ${{ github.event.base_ref }}"
          echo "default_branch = ${{ github.event.repository.default_branch }}"
          echo "event = ${{ toJson(github.event) }}"
          echo "repo = ${{ toJson(github.event.repository) }}"

  goreleaser:
    name: "Run Goreleaser"
    runs-on: ubuntu-24.04
    steps:
      - name: Validate ref
        env:
          GITHUB_EVENT_REPOSITORY_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITHUB_EVENT_BASE_REF: ${{ github.event.base_ref }}"
        run: |
          node -e "
            const ref = process.env.GITHUB_REF;
            console.log('Current ref:', ref);

            const baseRef = process.env.GITHUB_EVENT_BASE_REF;
            const defaultBranch = process.env.GITHUB_EVENT_REPOSITORY_DEFAULT_BRANCH;

            const isDefaultBranch = baseRef === `refs/heads/${defaultBranch}`;
            if (!isDefaultBranch) {
              console.log(`Not Valid: must be running on default branch (${defaultBranch})`);
              process.exit(1);
            }

            const isTag = ref.startsWith('refs/tags/');
            if (!isTag) {
              console.log(`Not Valid: must be running on tag (${ref})`);
              process.exit(1);
            }

            console.log('âœ… Valid ref:', ref);
          "

      - uses: actions/checkout@v4

      - name: Install Act dependencies
        if: ${{ env.ACT }}
        uses: ./.github/actions/setup-act-env

      - name: Get actions
        run: |
          git clone "$GITHUB_SERVER_URL/spigell/my-shared-workflows" ../actions

      - name: Setup Go and install deps
        uses: ./../actions/.github/actions/setup-go-env
        with:
          working-directory: ${{ inputs.working-directory }}

      - name: Release required binaries
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          args: release --clean --verbose
          version: '2.11.0'
          workdir: ${{ inputs.working-directory }}
        env:
          GITHUB_TOKEN: ${{ secrets.gh-token }}
